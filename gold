#!/usr/bin/env bash

# test cases
# travis
# markdown
# dot notation
# nested objects

GOLD=$HOME/opt/gold
GOLDdoc=$GOLD/docs
GOLDbin=$GOLD/bin
mkdir -p "$GOLDdoc"
mkdir -p "$GOLDbin"

banner() { cat<<'EOF'
#!/usr/bin/env gawk -f
# GOLD = Gawk Object Layer

# -----------------------------------------------
#                  .-'''-.
#                '   _    \  .---._______
#              /   /` '.   \ |   |\  ___ `'.
#       .--./).   |     \  ' |   | ' |--.\  \
#      /.''\\ |   '      |  '|   | | |    \  '
#     | |  | |\    \     / / |   | | |     |  '
#      \`-' /  `.   ` ..' /  |   | | |     |  |
#      /("'`      '-...-'`   |   | | |     ' .'
#      \ '---.               |   | | |___.' /'
#       /'""'.\              |   |/_______.'/
#      ||     ||             '---'\_______|/
#      \'. __//
#       `'---'
# -----------------------------------------------

EOF
}
gold2md() { gawk -v name="$1" '
  NR==1                   { print "\n# " name "\n";               next }
  /^}/                    { print; print "```\n";               next }
  /^(func|BEGIN|END).*}$/ { print "```awk"; print; print "```"; next }
  /^(func|BEGIN|END)/     { print "```awk"; print;              next }
                          { print $0 } 
' | gawk '{ a[NR]=$0}
       END{ i=1
            while(i<= length(a)) {
               i++; 
               if (a[i-1] == "```" && a[i] == "```awk")
                  i += 1
               else 
                  print a[i-1] };
            print a[i] }'
}

gold2awk() { banner; gawk '
function dots(s,   x) {
  return gensub(/\.([^0-9])([a-zA-Z0-9_]*)/, 
               "[\"\\1\\2\"]","g",s) 
} 
function subs(s,   x) { 
  for(x in SUBS) gsub(x, SUBS[x],s) 
  return s
}
function line(s) {
  if (s ~ /^}/) { 
    show=0
    return s      
  } else {  
    if (s ~ /^[\t ]*$/)   return s                                 
    s = subs(s)
    if (s ~ /^(func|BEGIN|END).*}$/) return dots(s) 
    if (s ~ /^(func|BEGIN|END)/)     show=1  
    return  ( show ?  dots(s) : "# " s ) }
}
function main(f,    path, used,        s,a) {
  if (used[f]++ == 0) { 
    print "#>>>>> "  path " : " f " >>>>>>>>>>>>>>>>>>>>>>>>>>>>"
    while((getline s < f) > 0)  {
      if (s ~ /^@include/) 
        main( gensub(/.*"(.*)".*$/, "\\1","g",s), path ": " f, used)
      else  {
        if (s ~ /^#DEF/ )  {
          split(s,a," ")
          SUBS["\\<" a[2] "\\>"] = a[3] 
        } else 
            print dots(subs(s)) }}
    print "\n#<<<<< " path " : " f " <<<<<<<<<<<<<<<<<<<<<<<<<<<<\n" }
}
BEGIN { main(ARGV[1]) }
' $1
}

f=$1
cat $f | gold2md  $f  > ${GOLDdoc}/$(basename $f .awk).md
gold2awk $f > ${GOLDbin}/$f
chmod +x ${GOLDbin}/$f

shift
echo "1 $1"
if   [ -z "$1" ]
then echo 11
     gawk -f ${GOLDbin}/$f 
else echo 12
     gawk -f ${GOLDbin}/$f $*
fi
